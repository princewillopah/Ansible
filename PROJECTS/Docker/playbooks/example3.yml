# ---
# - hosts: all
#   become: true
#   vars:
#     container_count: 4
#     default_container_name: docker
#     default_container_image: ubuntu
#     default_container_command: sleep 1d

#   tasks:
#     - name: Install aptitude
#       apt:
#         name: aptitude
#         state: latest
#         update_cache: true

#     - name: Install required system packages
#       apt:
#         pkg:
#           - apt-transport-https
#           - ca-certificates
#           - curl
#           - software-properties-common
#           - python3-pip
#           - virtualenv
#           - python3-setuptools
#         state: latest
#         update_cache: true

#     - name: Add Docker GPG apt Key
#       apt_key:
#         url: https://download.docker.com/linux/ubuntu/gpg
#         state: present

#     - name: Add Docker Repository
#       apt_repository:
#         repo: deb https://download.docker.com/linux/ubuntu focal stable
#         state: present

#     - name: Update apt and install docker-ce
#       apt:
#         name: docker-ce
#         state: latest
#         update_cache: true

#     - name: Install Docker Module for Python
#       pip:
#         name: docker

#     - name: Pull default Docker image
#       community.docker.docker_image:
#         name: "{{ default_container_image }}"
#         source: pull

#     - name: Create default containers
#       community.docker.docker_container:
#         name: "{{ default_container_name }}{{ item }}"
#         image: "{{ default_container_image }}"
#         command: "{{ default_container_command }}"
#         state: present
#       with_sequence: count={{ container_count }}

======================================================================================================================

=========================================================================================================================


---
- name: Install Docker and Start a Container
  hosts: your_target_hosts
  become: yes
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"  # Use apt for Debian-based systems

    - name: Install required packages for Docker
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      args:
        warn: no
      when: ansible_os_family == "Debian"

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
      when: ansible_os_family == "Debian"

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
      when: ansible_os_family == "Debian"

    - name: Start the Docker service
      service:
        name: docker
        state: started
      when: ansible_os_family == "Debian"

    - name: Pull a Docker image
      docker_image:
        name: nginx:latest

    - name: Run a Docker container
      docker_container:
        name: my_nginx
        image: nginx:latest
        state: started
        ports:
          - "80:80"
